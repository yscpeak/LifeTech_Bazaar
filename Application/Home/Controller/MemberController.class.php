<?php
// This class is automatically generated by the system
// and is intended for testing purposes only.
namespace Home\Controller;
use Think\Controller;

// MemberController handles user-related actions such as user information, addresses, collections, and orders.
// Extends _AuthController to ensure authentication for specific actions.
class MemberController extends _AuthController {

	// Display user information page.
	public function userinfo()
	{
		$row = M("member")->where("id=" . $_SESSION['account']['id'])->find();
		$this->assign("row", $row);

		$this->display();
	}

	// Process and save user information updates.
	public function userinfo_do()
	{
		M("member")->where("id=" . $_SESSION['account']['id'])->save($_POST);

		header("Content-type:text/html;charset=utf-8");
		echo "<script>alert('Personal information modification completed！')</script>";
		echo "<script>location.href='" . __CONTROLLER__ . "/userinfo'</script>";
	}

	// Display password edit page.
	public function password_edit()
	{
		// Verify old password correctness
		$row = M("member")->where("id=" . $_SESSION['account']['id'])->find();
		if ($row['password'] == $_POST['old_password']) {
			$data['id'] = $_SESSION['account']['id'];
			$data['password'] = $_POST['password'];
			M("member")->where("id=" . $_SESSION['account']['id'])->save($data);
			header("Content-type:text/html;charset=utf-8");
			echo "<script>alert('Personal password modification completed！')</script>";
			echo "<script>location.href='" . __CONTROLLER__ . "/userinfo'</script>";
		} else {
			header("Content-type:text/html;charset=utf-8");
			echo "<script>alert('The old password was entered incorrectly, please check！')</script>";
			echo "<script>location.href='" . __CONTROLLER__ . "/userinfo'</script>";
		}
	}

	// Display user's delivery addresses.
	public function address($id = "")
	{
		// Display a list of member's delivery addresses
		$list_address = M("mem_address")->where("member_id=" . $_SESSION['account']['id'])->select();
		$this->assign("list_address", $list_address);

		// For modification mode, display content of specific record
		$row_address = M("mem_address")->where("id=$id and member_id=" . $_SESSION['account']['id'])->find();
		$this->assign("row_address", $row_address);
		$this->display();
	}

	// Save user's delivery address updates or add a new address.
	public function address_save()
	{
		header("Content-type:text/html;charset=utf-8");
		if ($_POST['id']) {
			M("mem_address")->save($_POST);
			echo "<script>alert('Delivery address Modified successfully!')</script>";
			echo "<script>location.href='" . __CONTROLLER__ . "/address'</script>";
			exit;
		} else {
			unset($_POST['id']);
			$_POST['member_id'] = $_SESSION['account']['id'];
			if (M("mem_address")->add($_POST)) {
				echo "<script>alert('Delivery address Added successfully!')</script>";
				echo "<script>location.href='" . __CONTROLLER__ . "/address'</script>";
				exit;
			}
		}
		$this->display();
	}

	// Delete user's delivery address.
	public function address_del($id)
	{
		// Delete the record satisfying the id and current member_id
		M("mem_address")->where("id=$id and member_id=" . $_SESSION['account']['id'])->delete();

		header("Content-type:text/html;charset=utf-8");
		echo "<script>alert('Delivery address deleted successfully!')</script>";
		echo "<script>location.href='" . __CONTROLLER__ . "/address'</script>";
		exit;
	}

	// Display user's collection items.
	public function collect()
	{
		// Display collection information in list format
		$list_collect = D("CollectView")->where("mem_collect.member_id=" . $_SESSION['account']['id'])->select();
		$this->assign("list_collect", $list_collect);
		$this->display();
	}

	// Delete user's collection item.
	public function collect_del($id)
	{
		// Delete the record satisfying the id and current member_id
		M("mem_collect")->where("id=$id and member_id=" . $_SESSION['account']['id'])->delete();
		// echo M()->getlastsql();exit;
		header("Content-type:text/html;charset=utf-8");
		echo "<script>alert('Collection item deleted successfully!')</script>";
		echo "<script>location.href='" . __CONTROLLER__ . "/collect'</script>";
		exit;
	}

	// Add a product to user's collection.
	public function collect_add($goods_id)
	{
		$count = M("mem_collect")->where("id=$goods_id and member_id=" . $_SESSION['account']['id'])->count();

		if ($count == 0) {
			$data['goods_id'] = $goods_id;
			$data['member_id'] = $_SESSION['account']['id'];
			M("mem_collect")->add($data);
		}
		echo "success";
	}

	// Display user's order list.
	public function bill()
	{
		$db = M("bill");

		$count = $db->where("member_id=" . $_SESSION['account']['id'])->count();
		$page = new \Think\Page($count, $this->pageSize);
		$pageStr = $page->show();
		$this->assign("pageStr", $pageStr);

		// Generate paginated order list
		$limit = $page->firstRow . ',' . $page->listRows;
		$list_bill = $db->where("member_id=" . $_SESSION['account']['id'])->order("datetime desc")->limit($limit)->select();
		$this->assign("list_bill", $list_bill);
		$this->display();
	}

	// Display detailed information about a specific order.
	public function bill_info($id)
	{
		// Display detailed content of the current order (bill table)
		$row_bill = M("bill")->where("id=$id and member_id=" . $_SESSION['account']['id'])->find();

		if (!$row_bill) {
			header("Content-type:text/html;charset=utf-8");
			echo "<script>alert('Order ID is illegal')</script>";
			echo "<script>history.back();'</script>";
			exit;
		} else {
			$this->assign("row_bill", $row_bill);
		}

		// Retrieve order details corresponding to the current order
		$list_billDetail = D("BillDetailView")->where("cost_detail.bill_id=$id")->select();
		$this->assign("list_billDetail", $list_billDetail);

		//echo D()->getlastsql();exit;
		$this->display();
	}

	// Page for submitting a refund request for a specific order.
	public function bill_refund($code)
	{
		header("Content-type:text/html;charset=utf-8");

		// Ensure that the request can only be submitted once
		$count = M("bill_refund")->where(" bill_code='$code' and member_id=" . $_SESSION['account']['id'])->count();
		if ($count > 0) {
			echo "<script>alert('This order has already submitted a request！')</script>";
			echo "<script>history.back();</script>";
			exit;
		}

		// Get order information
		$row_bill = M("bill")->where(" code=$code and member_id=" . $_SESSION['account']['id'])->find();
		if (!$row_bill) {
			echo "<script>alert('The order is invalid, please check!')</script>";
			echo "<script>history.back();</script>";
			exit;
		}
		$this->assign("row_bill", $row_bill);
		$this->display();
	}

	// Display the comments page for a specific product.
	public function comments()
	{
		$this->assign("goods_id", $_GET['goods_id']);
		$this->assign("id", $_GET['id']);
		$this->display();
	}

	// Process and save user's product comments.
	public function comments_do()
	{
		$id = $_POST['id'];

		$data['goods_id'] = $_POST['goods_id'];
		$data['content'] = $_POST['content'];
		$data['member_id'] = $_SESSION['account']['id'];
		$data['p_time'] = date('Y-m-d H:i:s');

		if (M("comments")->add($data)) {
			header("Content-type:text/html;charset=utf-8");
			echo "<script>alert('Comment completed')</script>";
			echo "<script>location.href='" . __CONTROLLER__ . "/bill_info/id/" . $id . "'</script>";
		}
	}

	// Save the refund application page.
	public function bill_refund_do()
	{
		$data['bill_id'] = M("bill")->where("code='" . $_POST['code'] . "'")->getField("id");
		$data['bill_code'] = $_POST['code'];
		$data['reason'] = $_POST['reason'];
		$data['status'] = 0;
		$data['member_id'] = $_SESSION['account']['id'];
		if (M("bill_refund")->add($data)) {
			header("Content-type:text/html;charset=utf-8");
			echo "<script>alert('Refund application submitted!')</script>";
			echo "<script>location.href='" . __CONTROLLER__ . "/bill'</script>";
		}
	}

	// Confirm the receipt of a specific order.
	public function bill_receive($code)
	{
		header("Content-type:text/html;charset=utf-8");
		$result = M("bill")->where(" code='$code' and member_id=" . $_SESSION['account']['id'])->setField("status", 3);   //3对应的‘已收货’状态

		if (!$result) {
			echo "<script>alert('Confirmation of receipt failed!')</script>";
		} else {
			echo "<script>alert('Confirm receipt!')</script>";
		}
		echo "<script>location.href='" . __CONTROLLER__ . "/bill'</script>";
	}
}
?>