<?php
// This class is automatically generated by the system
// and is intended for testing purposes only.
namespace Home\Controller;
use Think\Controller;

// Controller for handling the main page, product listings, and user authentication.
class IndexController extends Controller {

	// Display the main page with recommended and categorized products.
	public function index(){
		// Implement display of recommended products
		$tt = M("goods")->where("recommend>0 and status=0")->limit(3)->select();

		foreach ($tt as $k => $v) {
			$list_goods_tuijian[$k] = $v;
			$member = M("member")->where("id=" . $v['m_id'])->find();
			$list_goods_tuijian[$k]['member_name'] = $member['name'];
		}

		$this->assign("list_goods_tuijian", $list_goods_tuijian);

		// Generate lists of products for each major category
		$list_category_goods = M("category")->where("length(code)=2")->select();
		foreach ($list_category_goods as &$category) {
			$category['son'] = M("category")->where("length(code)=4 and code like '" . $category['code'] . "%'")->select();
			$goods_tmp = M("goods")->where("category_code like '" . $category['code'] . "%'")->limit(3)->select();
			$goods = array();
			foreach ($goods_tmp as $k => $v) {
				$goods[$k] = $v;
				$member = M("member")->where("id=" . $v['m_id'])->find();
				$goods[$k]['member_name'] = $member['name'];
			}
			$category['goods'] = $goods;
		}

		$this->assign("list_category_goods", $list_category_goods);

		$this->display();
	}

	// Display product listings based on category code.
	public function lists($category_code = "")
	{
		// Generate breadcrumb navigation for category
		if (strlen($category_code) == 4) {        //获取二级类别的分类别
			$category_code_father = substr($category_code, 0, 2);
			$category_father = M("category")->where("code='$category_code_father'")->getField("name");
			$category_father_link = ">> <a href='" . __MODULE__ . "/Index/lists/code/$category_code_father'>" . $category_father . "</a>";
			$this->assign("category_father_link", $category_father_link);
		}
		$category_name = M("category")->where("code='$category_code'")->getField("name");
		$this->assign("category_name", $category_name);

		// 遍歷網址列傳遞參數，分別針對特價(special)，推薦(recommend)，價格(price)，日期(date)
		// 產生選單連結
		// 針對是否推薦生成鏈接
		foreach ($_GET as $key => $value) {
			if ($key != "recommend" && $key != "p")  $par_recommend .= "/" . $key . "/" . $value;
		}
		$this->assign("par_recommend", $par_recommend);

		foreach ($_GET as $key => $value) {
			if ($key != "special" && $key != "p")  $par_special .= "/" . $key . "/" . $value;
		}
		$this->assign("par_special", $par_special);

		foreach ($_GET as $key => $value) {
			if ($key != "quarter" && $key != "p")  $par_quarter .= "/" . $key . "/" . $value;
		}
		$this->assign("par_quarter", $par_quarter);

		foreach ($_GET as $key => $value) {
			if ($key != "price" && $key != "p")  $par_price .= "/" . $key . "/" . $value;
		}
		$this->assign("par_price", $par_price);

		$data = $_GET;
		if ($data['price'] != "") {
			$data['price'] = array('between', $data['price']);
		}
		if ($data['quarter'] != "") {
			$data['datetime'] = array('between', $data['quarter']);
		}
		if ($data['title'] != "") {
			$data['title'] = array('like', '%' . $data['title'] . '%');
		}
		if ($data['category_code'] != "") {
			$data['category_code'] = array('like', $data['category_code'] . '%');
		}

		$count = M("goods")->where($data)->count();
		$page = new \Think\Page($count, 10);
		$pageStr = $page->show();
		$this->assign("pageStr", $pageStr);

		$list_goods = M("goods")->where($data)->limit($page->firstRow . "," . $page->listRows)->select();
		$this->assign("list_goods", $list_goods);

		$this->display();
	}

	public function category()
	{
		$this->display();
	}

	public function info($id)
	{
		if (!in_array($id, $_SESSION['clicks'])) {
			$_SESSION['clicks'][] = $id;
			M("goods")->where("id=$id")->setInc("clicks");
		}

		$row_goods = M("goods")->where("id=$id")->find();
		$member = M("member")->where("id=" . $row_goods['m_id'])->find();
		$row_goods['member_name'] = $member['name'];

		$this->assign("row_goods", $row_goods);

		$comments1 = M("comments")->where("goods_id='{$row_goods['id']}'")->select();
		$comments = array();
		foreach ($comments1 as $k => $v) {
			$comments[$k] = $v;
			$member = M("member")->where("id=" . $v['member_id'])->find();
			$comments[$k]['member_name'] = $member['name'];
		}

		$this->assign("comments", $comments);

		$list_picture = M("goods_picture")->where("goods_id=$id")->select();
		$this->assign("list_picture", $list_picture);

		if ($row_goods['attr_id']) {
			$row_attr = M("goods_attr")->where("id=" . $row_goods['attr_id'])->find();
			$data['name'] = $row_attr['norms'];
			$data['collect'] = explode(",", $row_attr['content']);
			$this->assign("goodsAttr", $data);
		}

		$this->display();
	}

	public function buildCode()
	{
		$config = array(
			'fontSize'    => 55,
			'length'      => 4,
			'useNoise'    => false,
		);
		$Verify = new \Think\Verify($config);
		$Verify->entry();
	}

	public function login_do()
	{
		header("Content-type:text/html;charset=utf-8");

		$row = M("member")->where("name='" . $_POST['name'] . "' and password='" . $_POST['password'] . "'")->find();

		if ($row) {
			$_SESSION['account'] = $row;

			echo "<script>alert('Login successful！');</script>";
			echo "<script>location.href='" . __MODULE__ . "/Index/index'</script>";
		} else {
			echo "<script>alert('Login failed! Please check');</script>";
			echo "<script>history.back();</script>";
		}
	}

	public function logOut()
	{
		$_SESSION['account'] = null;
		header("Content-type:text/html;charset=utf-8");
		echo "<script>alert('Exit successful！');</script>";
		echo "<script>location.href='" . __MODULE__ . "/Index/index'</script>";
	}

	public function register_do()
	{
		$result = M("member")->add($_POST);
		header("Content-type:text/html;charset=utf-8");
		if ($result > 0) {
			$_SESSION['account'] = M("member")->find($result);
			echo "<script>alert('login was successful！');</script>";
			echo "<script>location.href='" . __MODULE__ . "'</script>";
		} else {
			echo "<script>alert('Registration failed! Please check');</script>";
			echo "<script>history.back();</script>";
		}
	}

	public function checkIsLogin()
	{
		if ($_SESSION['account']) {
			echo $_SESSION['account']['name'];
		}
	}

	public function getGoodsByCategory($code = "")
	{
		if ($code != "") {
			$list_goods = M("goods")->where("category_code like '$code%' and status=0")->limit(10)->select();
		} else {
			$list_goods = M("goods")->where(" status=0")->limit(10)->select();
		}
		$this->assign("list_goods", $list_goods);
		$this->display();
	}

}
?>
