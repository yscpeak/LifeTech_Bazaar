<?php
// This class is automatically generated by the system
// and is intended for testing purposes only.
namespace Home\Controller;
use Think\Controller;

// Controller for handling the shopping cart, order processing, and payment methods.
class BillOrderController extends _AuthController{

	// Display and manage the shopping cart.
	public function cart()
	{
		// Step 1: Check if the item is already in the cart.
		$count = M("mem_cart")->where("member_id=" . $_SESSION['account']['id'] . " and goods_id=" . $_GET['id'])->count();

		// Step 2: If not in the cart, insert the item into the cart.
		if ($count == 0) {
			$data['member_id'] = $_SESSION['account']['id'];
			$data['count'] = $_GET['count'];
			$data['goods_id'] = $_GET['id'];
			$data['attribute'] = $_GET['attribute'];
			M("mem_cart")->add($data);
		}

		// Step 3: Display the contents of the shopping cart.
		$list = D("CartView")->where("mem_cart.member_id=" . $_SESSION['account']['id'])->select();
		$this->assign("list", $list);

		$this->display();
	}

	// Asynchronously add a member's address.
	public function add_address()
	{
		$where["name"] = $_POST["name"];
		$where["member_id"] = $_SESSION["account"]["id"];
		$where["tel"] = $_POST["tel"];
		$where["phone"] = $_POST["phone"];
		$where["zipcode"] = $_POST["zipcode"];
		$where["city"] = $_POST["city"];
		$where["address"] = $_POST["address"];
		$where["id"] = M("mem_address")->add($where);
		echo json_encode($where);
	}

	// Remove an item from the shopping cart.
	public function cart_del($id)
	{
		M("mem_cart")->delete($id);
		echo "success";
	}

	// Remove all items from the shopping cart.
	public function cart_del_all()
	{
		M("mem_cart")->where("member_id=" . $_SESSION['account']['id'])->delete();
		echo "success";
	}

	// Display the order summary and address selection.
	public function account2()
	{
		// Check if redirected from the confirmation page due to insufficient balance.
		if ($_GET['code'] != "") {
			$bill_id = M("bill")->where("code='" . $_GET['code'] . "'")->getField("id");

			// Get the order details based on the provided code.
			$list_cart = D("billDetailView")->where("bill_id=" . $bill_id)->select();
			$this->assign("list_cart", $list_cart);

			// Display cart information based on the order ID.
			$cart_sum = D("billDetailView")->where("bill_id=" . $bill_id)->sum("total");
			$this->assign("cart_sum", $cart_sum);
		} else {
			// Get the total cost of the cart.
			$list_cart = D("CartView")->where("mem_cart.member_id=" . $_SESSION['account']['id'])->select();
			$this->assign("list_cart", $list_cart);

			// Display cart information based on the current user.
			$cart_sum = D("CartView")->where("member_id=" . $_SESSION['account']['id'])->sum("count*price");
			$this->assign("cart_sum", $cart_sum);
		}
		// Get the current user's delivery information.
		$list_address = M("mem_address")->where("member_id=" . $_SESSION['account']['id'])->select();
		$this->assign("list_address", $list_address);

		$this->display();
	}

	// Display the order confirmation page and insert order details.
	public function account3()
	{
		// Check if the order information already exists; if so, display it.
		if ($_REQUEST['code']) {
			$bill = M("bill")->where("code='" . $_REQUEST['code'] . "'")->find();

			// If the form is submitted from the account2 page, update delivery address and payment method.
			if ($_POST) {
				$bill['address_id'] = $_POST['address_id'];
				$bill['pay_way'] = $_POST['pay_way'];
				M("bill")->save($bill);
			}

			$this->assign("bill", $bill);

			$this->display();
			exit;
		}

		// Insert order details into the order and order detail tables.
		$data['code'] = date("YmdHis");
		$data['member_id'] = $_SESSION['account']['id'];
		$data['address_id'] = $_POST['address_id'];
		$data['pay_way'] = $_POST['pay_way'];
		$data['time'] = date('Y-m-d H:i:s');
		$data['status'] = 0;
		$data['money'] = $data['money_reality'] = $_POST["money"];
		$data['id'] = M("bill")->add($data);
		$this->assign("bill", $data);

		// Insert each cart item into the order detail table.
		$list = D("CartView")->where("mem_cart.member_id=" . $_SESSION['account']['id'])->select();
		foreach ($list as $tmp) {
			unset($tmp['id']);  // Clear the original ID value from the view table.
			$tmp['total'] = $tmp['count'] * $tmp['price'];
			$tmp['bill_id'] = $data['id'];
			$goods = M("goods")->where("id=" . $tmp['goods_id'])->find();

			M("cost_detail")->add($tmp);
		}

		// Clear the shopping cart after generating the order.
		M("mem_cart")->where("member_id=" . $_SESSION['account']['id'])->delete();

		$this->display();
	}

	// Process the selected payment method and update order status.
	public function account4()
	{
		header("Content-type:text/html;charset=utf-8");

		// Check the form submission to determine the payment method.
		if ($_POST['pay_way'] == 0) {        // Balance payment
			// Get the current user's balance.
			$money = M("member")->where("id=" . $_SESSION['account']['id'])->getField("money");
			// Check if the balance is sufficient.
			if ($money < $_POST['money']) {
				echo "<script>alert('Insufficient balance! Please choose another payment method')</script>";
				echo "<script>location.href='" . __CONTROLLER__ . "/account2/code/" . $_POST['code'] . "'</script>";
				exit;
			}
			// Deduct the payment amount from the user's balance.
			M("member")->where("id=" . $_SESSION['account']['id'])->setDec('money', $_POST['money']);

			// Insert a record in the member balance table for balance deduction.
			$where['member_id'] = $_SESSION['account']['id'];
			$where['money'] = $_POST['money'];
			$where['datetime'] = date("Y-m-d H:i:s");
			$where['memo'] = 'Balance payment';
			$where['type'] = 1; // Deduct balance
			M("mem_balance")->add($where);

			// Update the order status to "Paid" (status = 1).
			M("bill")->where("code='" . $_POST['code'] . "'")->setField("status", 1);

			// Clear the shopping cart information.
			M("mem_cart")->where("member_id=" . $_SESSION['account']['id'])->delete();

			echo "<script>alert('Balance payment successful! About to be shipped')</script>";
			echo "<script>location.href='" . __MODULE__ . "'</script>";

		} elseif ($_POST['pay_way'] == 1) { // Online banking payment, display simulated payment page
			$this->assign("code", $_POST['code']);
			$this->assign("money", $_POST['money']);
			$this->display();
		} elseif ($_POST['pay_way'] == 2) { // Cash on delivery
			echo "<script>alert('Order placed successfully! About to be shipped')</script>";
			echo "<script>location.href='" . __MODULE__ . "'</script>";
		}
	}

	// Process the simulated online banking payment and update order status.
	public function account4_do()
	{
		header("Content-type:text/html;charset=utf-8");

		// Update the order status to "Paid" (status = 1).
		$num = M("bill")->where("code='" . $_POST['code'] . "'")->setField("status", 1);

		echo "<script>alert('Congratulations on your successful payment!');</script>";
		echo "<script>location.href='" . __MODULE__ . "';</script>";
	}
}
?>
